/*08/03/2024*/

/**TAREFA**/
-- EXERCÍCIO PARA CASA (SOMENTE OS VALORES "OLT" E "SWITCH" PODEM SER INSERIDOS NO ATRIBUTO "TIPO" DA TABELA "EQUIPAMENTO")

-- NO MYSQL 5.5 NÃO EXISTE UMA FORMA NATIVA DE REALIZAR CHECK CONSTRAINT, UMA DAS ALTERNATIVAS É UTILIZAR TRIGGERS
DELIMITER $$
CREATE TRIGGER TRG_VERIFICA_TIPO_INSERT
BEFORE INSERT ON EQUIPAMENTO
FOR EACH ROW
BEGIN
    IF NEW.TIPO NOT IN ('OLT', 'SWC', 'SWD') THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "OS VALORES INSERIDOS DEVEM SER 'OLT', 'SWC' OU 'SWD'";
    END IF;
END
$$

-- NO MYSQL 5.5 NÃO EXISTE UMA FORMA NATIVA DE REALIZAR CHECK CONSTRAINT, UMA DAS ALTERNATIVAS É UTILIZAR TRIGGERS
DELIMITER $$
CREATE TRIGGER TRG_VERIFICA_TIPO_UPDATE
BEFORE UPDATE ON EQUIPAMENTO
FOR EACH ROW
BEGIN
    IF NEW.TIPO NOT IN ('OLT', 'SWC', 'SWD') THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "OS VALORES ATUALIZADOS DEVEM SER 'OLT', 'SWC' OU 'SWD'";
    END IF;
END
$$

-- UMA ALTERNATIVA SERIA UTILIZAR O TIPO DE DADOS "ENUM", PORÉM ELA É MAIS SIMPLES, SE FOSSE NECESSÁRIO TRABALHAR COM UM INTERVALO NÚMERIO, POR EXEMPLO, TERIA QUE UTILIZAR TRIGGER
ALTER TABLE EQUIPAMENTO MODIFY TIPO ENUM('OLT', 'SWC', 'SWD');

/**AULA**/
-- RESPOSTA DO PRIMEIRO EXERCÍCIO DA TAREFA --
-- ADICIONA O ATRIBUTO SHEL À TABELA "EQUIPAMENTO"
ALTER TABLE EQUIPAMENTO ADD SHELF NUMERIC(1);

-- CRIA UMA CHECK CONSTRAINT PARA VERIFICAR SE A ENTRADA DO ATRIBUTO "SHELF" É MAIOR DO 0
ALTER TABLE EQUIPAMENTO ADD CONSTRAINT CK_SHELF CHECK (SHELF > 0);

-- INSERE DADOS NA TABELA "EQUIPAMENTO" (DADOS QUE ATENDEM AO CHECK CONSTRAINT CRIADO ACIMA)
INSERT INTO EQUIPAMENTO VALUES ('FRC_CE', 'FRC_CE_OLT04', 'OLT', 'HUAWEI', 'MA5800', 1);

-- INSERE DADOS NA TABELA "EQUIPAMENTO" (DADOS QUE NÃO ATENDEM AO CHECK CONSTRAINT CRIADO ACIMA)
INSERT INTO EQUIPAMENTO VALUES ('FRC_CE', 'FRC_CE_OLT05', 'OLT', 'HUAWEI', 'MA5800', -1);
-- OBS.: AMBOS OS COMANDOS ACIMA FORAM ACEITOS, POIS A VERSÃO 5.5 DO MYSQL NÃO TEM SUPORTE AO CHECK CONSTRAINT, É NECESSÁRIO CRIAR UMA TRIGGER PARA CONTORNAR ESSA SITUAÇÃO

-- RESPOSTA DO SEGUNDO EXERCÍCIO DA TAREFA --
-- CRIA UMA CHECK CONSTRAINT PARA VERIFICAR SE A ENTRADA DO ATRIBUTO "TIPO" É ("OLT", "SWC", "SWD")
ALTER TABLE EQUIPAMENTO ADD CONSTRAINT CK_TIPO CHECK (TIPO IN('OLT', 'SWC', 'SWD'));

-- ALTERA O TIPO DE DADO DO ATRIBUTO "TIPO" PARA ENUM, PERMITINDO ENTRADA SOMENTE DOS VALORES ("OLT", "SWC", "SWD")
ALTER TABLE EQUIPAMENTO MODIFY COLUMN TIPO ENUM ('OLT', 'SWC', 'SWD');
-- OBS.: O PRIMEIRO COMANDO NÃO FUNCIONA CORRETAMENTE, POIS A VERSÃO 5.5 DO MYSQL NÃO TEM SUPORTE AO CHECK CONSTRAINT, É NECESSÁRIO CRIAR UMA TRIGGER PARA CONTORNAR ESSA SITUAÇÃO. A SEGUNDA QUERY FUNCIONA CORRETAMENTE

-- RESPOSTA DO TERCEIRO EXERCÍCIO DA TAREFA --
-- GARANTE UMA INTEGRIDADE SEMÂNTICA DO BANCO DE DADOS
ALTER TABLE EQUIPAMENTO ADD CONSTRAINT CK_EQUIP_NOME CHECK (SITE_NOME = SUBSTR(EQUIP_NOME, 1, 6));

-- PARÂMETROS EM STORED PROCEDURE
--MODO -> IN / OUT / INOUT
--NOME -> P_SITE_NOME
--TIPO -> VARCHAR(10) / NUMERIC / BOOELAN

-- CRIA UMA PROCEDURE QUE ELEVA O NÚMERO AO QUADRADO DO PARÂMETRO (COM VALOR DE ENTRADA E SAÍDA, PORÉM O VALOR ATRIBUÍDO É ATRIBUÍDO PARA A MESMA VARIÁVEL)
DELIMITER @
CREATE PROCEDURE ELEVAR_AO_QUADRADO (INOUT P_VALOR INT)
BEGIN
	SET P_VALOR = P_VALOR * P_VALOR;
END
@

-- DEFINE O VALOR DE 8 PARA A VARIÁVEL "P_VALOR"
SET @P_VALOR = 8;

-- VERIFICAR O VALOR DA VARIÁVEL "P_VALOR"
SELECT @P_VALOR;

-- CRIA A PROCEDURE QUE ELEVA O NÚMERO AO QUADRADO DO PARÂMETRO (COM VALOR SOMENTE DE ENTRADA, ELE NÃO ELEVA O NÚMERO, POIS NÃO É UM COMANDO DE SÁIDA, SOMENTE DE ENTRADA)
-- ELE RETORNA O VALOR QUE FOI PASSADO NO PARÂMETRO
DELIMITER @
CREATE PROCEDURE ELEVAR_AO_QUADRADO (IN P_VALOR INT)
BEGIN
	SET P_VALOR = P_VALOR * P_VALOR;
END
@

-- CRIA A PROCEDURE QUE ELEVA O NÚMERO AO QUADRADO DO PARÂMETRO (COM VALOR SOMENTE DE SAÍDA, ELE NÃO ELEVA O NÚMERO, POIS NÃO É UM COMANDO DE ENTRADA, SOMENTE DE SAÍDA)
-- ELE RETORNA "NULL", POIS COMO ELE SOMENTE RETORNA O VALOR DE SÁIDA, ELE ACABA MULTIPLICANDO NADA POR NADA
DELIMITER @
CREATE PROCEDURE ELEVAR_AO_QUADRADO (OUT P_VALOR INT)
BEGIN
	SET P_VALOR = P_VALOR * P_VALOR;
END
@