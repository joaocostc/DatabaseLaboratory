/*01/03/2024*/

-- INSERIR UM NOVO DADO NA TABELA EQUIPAMENTO
INSERT INTO EQUIPAMENTO (SITE_NOME, EQUIP_NOME, TIPO, MODELO, FABRICANTE) VALUES 
('FRC_CE', 'FRC_CE_OLT03', 'OLT', 'MA5800', 'HUAWEI');

-- ATUALIZAR O DADO ANTERIOR DA TABELA EQUIPAMENTO
UPDATE EQUIPAMENTO SET TIPO = "SWITCH" WHERE EQUIP_NOME = "FRC_CE_OLT02";

-- APÓS ISSO, REALIZAR UM CRASH NO BANCO E VERIFICAR SE OS DADOS FORAM ATUALIZADOS CORRETAMENTE. DEU CERTO, POIS O AUTOCOMMIT ESTÁ HABILITADO

-- VERIFICA SE A VARIÁVEL DE AMBIENTE REFERENTE AO AUTOCOMMIT ESTÁ HABILITADA (1 - REPRESENTA TRUE E 0 - REPRESENTA FALSE)
SELECT @@AUTOCOMMIT;

-- DESABILITA O SALVAMENTO AUTOMÁTICO DAS TRANSAÇÕES
SET @@AUTOCOMMIT = 0;

-- INSERE DADOS NA TABELA EQUIPAMENTO 
INSERT INTO EQUIPAMENTO (SITE_NOME, EQUIP_NOME, TIPO, MODELO, FABRICANTE) VALUES 
('FRC_CE', 'FRC_CE_OLT03', 'OLT', 'MA5800', 'HUAWEI');

-- EFETIVA A TRANSAÇÃO DE INSERÇÃO NA TABELA EQUIPAMENTO
COMMIT;

-- VERIFICAR SE A TRANSAÇÃO FOI SALVA NA TABELA
SELECT * FROM EQUIPAMENTO;

-- ATUALIZA O REGISTRO DA TABELA EQUIPAMENTO
UPDATE EQUIPAMENTO SET TIPO = "SWITCH" WHERE EQUIP_NOME = "FRC_CE_OLT03";

-- VERIFICAR SE A TRANSAÇÃO FOI SALVA NA TABELA (FOI SALVA, PORÉM COMO NÃO EFETUEI O COMMIT E LOGO APÓS IREI EFETUAR UM ROLLBACK, A TRANSAÇÃO NÃO SERÁ EFETIVADA)
SELECT * FROM E	QUIPAMENTO;

-- CANCELA A TRANSAÇÃO DE ATUALIZAÇÃO NA TABELA EQUIPAMENTO
ROLLBACK;

-- NA PRÁTICA, FICA A CRITÉRIO DA APLICAÇÃO QUANDO EXECUTAR O COMMIT E ROLLBACK, NÃO FICA DEFINIDO DIRETO NO BANCO DE DADOS

-- ALTERA O DELIMITADOR
DELIMITER $
-- CRIA UMA PROCEDURE PARA INSERIR DADOS NA TABELA EQUIPAMENTO
CREATE PROCEDURE INSERE_DADOS_EQUIPAMENTO (P_SITE_NOME VARCHAR(30), 
											P_EQUIP_NOME VARCHAR(30), 
											P_TIPO VARCHAR(30), 
											P_MODELO VARCHAR(30), 
											P_FABRICANTE VARCHAR(30), 
											P_RACK NUMERIC (10))
BEGIN

	INSERT INTO EQUIPAMENTO VALUES (P_SITE_NOME, P_EQUIP_NOME, P_TIPO, P_MODELO, P_FABRICANTE, P_RACK);

END
$

-- CHAMA E EXECUTA A PROCEDURE "INSERE_DADOS_EQUIPAMENTO"
CALL INSERE_DADOS_EQUIPAMENTO ('FRC_JI', 'FRC_JI_OLT03', 'OLT', 'MA5800', 'HUAWEI', NULL);

-- DELETA O REGISTRO INSERIDO PELA PROCEDURE
DELETE FROM EQUIPAMENTO WHERE EQUIP_NOME = "FRC_JI_OLT03";

-- COMANDO PARA VISUALIZAR AS PROCEDURES EXISTENTES DENTRO DO BANCO DE DADOS
SELECT ROUTINE_TYPE, ROUTINE_NAME
    FROM INFORMATION_SCHEMA.ROUTINES
    WHERE ROUTINE_SCHEMA = 'AULALAB';

-- COMANDO PARA VISUALIZAR A PROCEDURE PELO NOME DELA	
SELECT ROUTINE_TYPE, ROUTINE_NAME
    FROM INFORMATION_SCHEMA.ROUTINES
    WHERE ROUTINE_NAME = 'PRC_DEL_DATA';	
	
-- DELETA A PROCEDURE "INSERE_DADOS_EQUIPAMENTO"
DROP PROCEDURE INSERE_DADOS_EQUIPAMENTO;

-- MOSTRA INFORMAÇÕES REFERENTE A SUA CONEXÃO, COMO: ID, VERSÃO DO MYSQL, BANCO DE DADOS CONECTADO, USUÁRIO, ENTRE OUTRAS INFORMAÇÕES
STATUS;

-- ALTERA O DELIMITADOR
DELIMITER @

-- CRIA UMA PROCEDURE A PROCEDURE "PRC_DEL_DATA"
CREATE PROCEDURE PRC_DEL_DATA()
BEGIN
	 -- FICAR ATENTO EM RELAÇÃO À POSIÇÃO, POIS COMO O SITE É UMA TABELA PAI, SE ELA VIER PRIMEIRO, NÃO EXECUTA O COMANDO (APAGAR DADOS DA TABELA EQUIPAMENTO)
	DELETE FROM EQUIPAMENTO;
	-- FICAR ATENTO EM RELAÇÃO À POSIÇÃO, POIS COMO O SITE É UMA TABELA PAI, SE ELA VIER PRIMEIRO, NÃO EXECUTA O COMANDO (APAGAR DADOS DA TABELA SITE)
	DELETE FROM SITE;
	-- EFETIVAR A TRANSAÇÃO
	COMMIT; 
END
@

-- ALTERAR O DELIMITADOR
DELIMITER ;

-- CHAMA E EXECUTA A PROCEDURE "PRC_DEL_DATA"
CALL PRC_DEL_DATA();