/*05/04/2024*/

--1)
-- CRIAR APENAS AS TABELAS FUNCIONARIO E DEPENDENTE, INCLUINDO AS SUAS CHAVES PRIMÁRIAS E A CHAVE ESTRANGEIRA DE DEPENDENTE PARA FUNCIONARIO, CONFORME DEMONSTRADO NO MODELO RELACIONAL (MR) ACIMA.
CREATE TABLE FUNCIONARIO (
	PNOME VARCHAR(30),
	MINICIAL CHAR(1),
	UNOME VARCHAR(30),
	CPF VARCHAR(11) NOT NULL,
	DATANASC DATE,
	ENDERECO VARCHAR(50),
	SEXO ENUM ('M', 'F'),
	SALARIO NUMERIC (5,2),
	CPF_SUPERVISOR VARCHAR(11),
	DNR INT(1),
	PRIMARY KEY(CPF)
);

CREATE TABLE DEPENDENTE (
	NOME_DEPENDENTE VARCHAR(30) NOT NULL,
	SEXO ENUM('M', 'F'),
	DATANASC DATE,
	PARENTESCO VARCHAR(30),
	FCPF VARCHAR(11) NOT NULL,
	PRIMARY KEY(NOME_DEPENDENTE, FCPF)
);

ALTER TABLE DEPENDENTE ADD FOREIGN KEY (FCPF) REFERENCES FUNCIONARIO (CPF);

--2)
-- INSERIR OS REGISTROS (LINHAS OU TUPLAS) DO EXERCÍCIO 1 NAS TABELAS FUNCIONARIO (8 LINHAS) E DEPENDENTE (7 LINHAS).
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('JOÃO', 'B', 'SILVA', '12345678966', '1965-01-09', 'RUA DAS FLORES, 751, SÃO PAULO, SP', 'M', 30000, '33344555587', 5);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('FERNANDO', 'T', 'WONG', '33344555587', '1955-12-08', 'RUA DA LAPA, 34, SÃO PAULO, SP', 'M', 40000, '88866555576', 5);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('ALICE', 'J', 'ZELAYA', '99988777767', '1968-01-19', 'RUA SOUZA LIMA, 35, CURITIBA, PR', 'F', 25000, '98765432168', 4);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('JENNIFER', 'S', 'SOUZA', '98765432168', '1941-06-20', 'AV. ARTHUR DE LIMA, 54, SANTO ANDRÉ, SP', 'F', 43000, '88866555576', 4);			
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('RONALDO', 'K', 'LIMA', '66688444476', '1962-09-15', 'RUA REBOUÇAS, 65, PIRACICABA, SP', 'M', 38000, '33344555587', 5);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('JOICE', 'A', 'LEITE', '45345345376', '1972-07-31', 'AV. LUCAS OBES, 74, SÃO PAULO, SP', 'F', 25000, '33344555587', 5);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('ANDRÉ', 'V', 'PEREIRA', '98798798733', '1969-03-29', 'RUA TIMBIRA, 35, SÃO PAULO, SP', 'M', 25000, '98765432168', 4);
INSERT INTO FUNCIONARIO (PNOME, MINICIAL, UNOME, CPF, DATANASC, ENDERECO, SEXO, SALARIO, CPF_SUPERVISOR, DNR)
				VALUES ('JORGE', 'E', 'BRITO', '88866555576', '1937-11-10', 'RUA DO HORTO, 35, SÃO PAULO, SP', 'M', 55000, 'NULL', 1);
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('33344555587', 'ALICIA', 'F', '1986-04-05', 'FILHA');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('33344555587', 'TIAGO', 'M', '1983-10-25', 'FILHO');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('33344555587', 'JANAÍNA', 'F', '1958-05-03', 'ESPOSA');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('98765432168', 'ANTONIO', 'M', '1942-02-28', 'MARIDO');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('12345678966', 'MICHAEL', 'M', '1988-01-04', 'FILHO');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('12345678966', 'ALICIA', 'F', '1988-12-30', 'FILHA');
INSERT INTO DEPENDENTE (FCPF, NOME_DEPENDENTE, SEXO, DATANASC, PARENTESCO) VALUES ('12345678966', 'ELIZABETH', 'F', '1967-05-05', 'ESPOSA');

--3)
--VERIFICAR SE AS CHAVES PRIMÁRIAS FORAM CRIADAS
DESC FUNCIONARIO;
DESC DEPENDENTE;

--4)
-- VERIFICAR SE A CHAVE ESTRANGEIRA FOI CRIADA CORRETAMENTE
SHOW CREATE TABLE DEPENDENTE;
-- OU
USE INFORMATION_SCHEMA;
SELECT CONSTRAINT_SCHEMA, CONSTRAINT_NAME, TABLE_NAME, REFERENCED_TABLE_NAME FROM REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_SCHEMA = "TEST";

--5)
-- BUSCAR O SALÁRIO MÉDIO DOS FUNCIONÁRIOS DA TABELA FUNCIONARIO AGRUPADO POR DEPARTAMENTO NÚMERO (DNR).
SELECT DNR, AVG(SALARIO) AS MEDIA_SALARIO
FROM FUNCIONARIO
GROUP BY DNR;


--6)
-- CRIAR UMA PROCEDURE QUE ATUALIZA O SALÁRIO DOS FUNCIONÁRIOS COM UM AUMENTO DE 10%.
DELIMITER $$
CREATE PROCEDURE BONUS_SALARIO()
BEGIN
    UPDATE FUNCIONARIO
    SET SALARIO = SALARIO * 1.10;
	COMMIT; 
END
$$

DELIMITER ;

CALL BONUS_SALARIO();

SELECT * FROM FUNCIONARIO;

--7)
-- REALIZAR UMA CONSULTA SQL NO DICIONÁRIO DE DADOS (METADADOS) DO BANCO DE DADOS QUE RETORNE O CÓDIGO FONTE DA PROCEDURE CRIADA NO EXERCÍCIO 6.
SHOW CREATE PROCEDURE BONUS_SALARIO();